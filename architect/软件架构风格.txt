TODO. 架构风格
Layer Architect 分层式架构风格，将系统划分成Layer(包含不同职责)
1. 层之间有明确的依赖关系，每层都依赖其下方的层
2. 在缺少数据持久层的情况下很难测试业务逻辑层
3. 单一的数据持久化层如何与不同的DB进行交互 ？

Hexagon Architect 六边形架构风格：替代分层架构
1. 将业务逻辑和表层与数据访问层隔离开，利于业务逻辑的测试
2. 业务逻辑通过不同的适配器调用不同的外部系统

TODO. DDD: Domain Driven Development
以不同的Domain来驱动项目的开发，驱动项目结构的变化