Serverless: 运行代码而无需管理基础设置
只需上次代码，Serverless平台就能运行

Serverless是构建和管理基于微服务架构的流程，允许在"服务部署级别"而非"服务器部署级别"来管理应用部署
Serverless完全由第三方管理，由事件触发，存在于无状态(Stateless)、暂存计算容器内
Serverless意味着开发者可以专注在产品代码上，而无须管理和操作云端或本地的服务器或运行时

TODO. Serverless适用于哪些场景 ?
无服务器计算适合于任何事件驱动的各种案例，基于事件的数据处理
1. Web及移动端服务中，构建可弹性扩展、高可用的移动或Web后端应用服务
2. IoT场景下可高效的处理实时流数据，由设备产生海量的实时信息流数据，通过Serverless服务分类处理并写入后端处理
3. 通过用户上传事件触发多个函数，分别完成高清转码、音频转码等功能，满足用户对实时性和并发能力的高要求

TODO. Serverless存在的问题 ?
Serverless计算的平台可以节省大量时间和成本，让开发者得以开展更有价值的工作，而不是管理基础设施
1. 不适合长时间运行应用:
   Serverless在请求到来时才运行，当应用不运行的时候就会进入 “休眠状态”，下次当请求来临时，应用将会需要一个启动时间，即冷启动时间
   如果应用需要一直长期不间断的运行、处理大量的请求，那么就不适合采用Serverless架构
2. 完全依赖于第三方服务
   当采用某云服务厂商的Serverless架构时，就和该服务供应商绑定了，很难将服务迁到别的云服务商
3. 缺乏调试和开发工具
   只存在serverless-offline、dynamodb-local等一系列插件可用于调试
4. 构建复杂
   AWS Lambda的CloudFormation配置是如此的复杂，并且难以阅读及编写
