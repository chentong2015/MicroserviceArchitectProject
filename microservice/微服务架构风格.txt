Layer Architect 分层式架构风格，将系统划分成Layer(包含不同职责)
// View UI层
// Controller 控制层(不包含业务逻辑)
// Service 业务层
// ORM 数据持久层
// DB 数据库系统
1. 层之间有明确的依赖关系，每层都依赖其下方的层
2. 在缺少数据持久层的情况下很难测试业务逻辑层
3. 单一的数据持久化层如何与不同的DB进行交互？

Hexagon Architect 六边形架构风格：替代分层架构，解决分层架构的弊端